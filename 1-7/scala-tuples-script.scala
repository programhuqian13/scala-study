//scala中的元组
//和list一样，元组也是不可变得，但是和list也有不同之处：元组可以包含不同类型的元素，但是list为元素为统一中类型
// 元组非常有用，例如，
//如果需要从方法返回多个对象。 而在Java中你通常会创建一个类似JavaBean的类来保存多个返回值，
//在Scala中你可以简单地返回一个元组。 它很简单：实例化一个新的
//保存一些对象的元组，只是将对象放在括号中，分开用逗号。 实例化后，您可以访问其元素单独使用点，下划线和元素的从一开始的索引
//元组的下标是从1开始的,而list是从0开始的
val tuples1 = ("tony",12,"hello")
println(tuples1._1)
println(tuples1._2)
println(tuples1._3)
//scala会根据里面的元素类型去创建tuples，val tuples = Tuples3[String,Int,String]，如果里面有N个元素，就会创建为TuplesN[n的type]
//通过_得到相应的元素，使用.方法进行操作
//访问元组的元素
//您可能想知道为什么您无法访问元组的元素,比如列表的元素，例如“pair（0）”。 原因是一个列表的apply方法总是返回相同的类型，但每个类型
//元组的元素可以是不同的类型：_1可以有一种结果类型，_2另一个，依此类推。 这些_N数字是一个基础，而不是从零开始，
//因为从1开始是其他语言设定的传统,使用静态类型的元组，例如Haskell和ML
